// <auto-generated />
using System;
using DD.TataBuku.Ledger.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DD.TataBuku.Ledger.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DD.TataBuku.Ledger.API.Models.GeneralLedger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("GeneralLedgerDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GeneralLedgerName")
                        .IsRequired()
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<string>("GeneralLedgerNo")
                        .IsRequired()
                        .HasColumnType("character varying(24)")
                        .HasMaxLength(24);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RefDocumentNo")
                        .IsRequired()
                        .HasColumnType("character varying(24)")
                        .HasMaxLength(24);

                    b.Property<byte>("RowStatus")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("GeneralLedgerNo")
                        .IsUnique();

                    b.ToTable("GeneralLedgers");
                });

            modelBuilder.Entity("DD.TataBuku.Ledger.API.Models.GeneralLedgerDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasColumnType("character varying(24)")
                        .HasMaxLength(24);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("character varying(24)")
                        .HasMaxLength(24);

                    b.Property<decimal>("ExchangeAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("numeric");

                    b.Property<Guid>("GeneralLedgerId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("RowStatus")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("GeneralLedgerId");

                    b.ToTable("GeneralLedgerDetails");
                });

            modelBuilder.Entity("DD.TataBuku.Ledger.API.Models.GeneralLedgerDetail", b =>
                {
                    b.HasOne("DD.TataBuku.Ledger.API.Models.GeneralLedger", "GeneralLedger")
                        .WithMany("GeneralLedgerDetails")
                        .HasForeignKey("GeneralLedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
